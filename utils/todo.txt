git checkout -b database majd, és ott lesz egy merge

Write the three mock events to the database
upload some random data into a filestructure that is structured according to predefined conventions (mármint amit én eddig gondoltam)
aludj

set up connection to database "standalone" -run nodejs on metal, mongodb containerized

legyen a resben egy exampleEventpage.pug és legyen az app.js-ben egy get endpoint ami nem static html filet lookupol, hanem az exampleEventPage.pug ot rendereli egy külső variable h1-el

ha megvan a mockdata a db-ben akkor próbáld ki, hogy ez az endpoint querryzze a mongodb legfelső(random) elemét és annak a titlejét passolja a pug rendernek

#fix
most most pages are static, they are rendered at time of dataentry to static html files. these have different relative path to the logo and css for example.
fix it.

egyrész valahogy érd el, hogy ha a mobilbrékpolynt megtörténik, akkor a mobil.css-t is hívja be with higher priority
abban valahogy csináld meg, hogy csak a latest exib jelenjen meg, onnan tudj menni az összes exibre, ami ugye egy subpage pugból mongoval generálva, de a mobilos exibsMenu.pug css-e ne ugyanazt az eventcardot használja, hanem ott csak a kép, artist ésvagy title és egy more button legyen, descriptiont haggyad

#CSS
mobilon a kapcsolat buborékok torlódnak


Make the uploadEvent adminpage look more like an actual event.

switch to LTS alpine base images for docker
set up a toolchain so it tracks the current used version, if a newer lts version comes out test against it and if passes update the version
For some reason the 18.16.0-alpine doesnt work, switched to 18.16.0-slim for now

USERS!!!

Proper networking in the docker-compose
(dns-server like feature, helps with connection stability I guess)
Again a decision you later have to make:
either give a purpose for the custom mongodb image with users and stuff if you understand it, prolly a mutliuser setup would be nice for the separate admin-container to make sense
but if you dont set that up, then you dont have  to have a separate config and Dockerfile for the db

I added a  dependency called multer that does the same thing as  the body-parser module, but it works  for multipart forms and images and stuff, so please dont forget to remove the body-parser
Ill have to delete the node-modules dir and run npm install again. that will delete all the deps of body-parser and regenerate the package-lock.json